{"version":3,"sources":["utils/MovieAPI.ts","components/PopularItem/PopularItem.tsx","components/PopularList/PopularList.tsx","components/MovieDetailsPage/MovieDetailsPage.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","api_string","MovieAPI","getPopularMovies","a","get","data","results","getMovieDetails","id","getMovieVideos","searchMovies","searchTerm","getCrew","cast","PopularItem","movie","className","to","poster_path","title","length","substring","style","backgroundImage","PopularList","useState","ratings","setRatings","searching","setSearching","movies","setMovies","visibleMovies","setVisibleMovies","popularMovies","setPopularMovies","useEffect","then","response","catch","error","console","log","searchTermChange","filterMovies","ratingRangeChange","event","newValue","useVal","r","filter","m","vote_average","backdrop_path","TextField","label","variant","onChange","e","target","value","Slider","valueLabelDisplay","min","max","CircularProgress","map","MovieDetailsPage","useParams","loading","setLoading","setMovie","videos","setVideos","crew","setCrew","useId","Promise","all","genres","x","name","overview","member","profile_path","width","height","src","key","frameBorder","allow","allowFullScreen","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde9c020.chunk.js","sourcesContent":["import axios from 'axios';\nimport { MovieSearchResult, MovieDetails, MovieVideoDetails, Crewmember } from '../models/MovieModels';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/'\n});\n\nconst api_string = 'api_key=b60da710fb69e88a59ee89dba4f2bb11';\n\ninterface SearchResult {\n    page: number,\n    results: MovieSearchResult[]\n};\ninterface Crewresult {\n    page: number,\n    cast: Crewmember[]\n};\n\nconst MovieAPI = {\n    getPopularMovies: async () => { return await (await instance.get<SearchResult>(`movie/popular?${api_string}&language=en-US&page=1`)).data.results; },\n    getMovieDetails: async (id: string) => { return await (await instance.get<MovieDetails>(`movie/${id}?${api_string}&language=en-US`)).data; },\n    getMovieVideos: async(id: string) => { return await (await instance.get<MovieVideoDetails>(`movie/${id}/videos?${api_string}&language=en-US`)).data.results; },\n    searchMovies: async (searchTerm: string) => { return await (await instance.get<SearchResult>(`search/movie?${api_string}&query=${searchTerm}`)).data.results; },\n    getCrew: async (id: string) => { return await (await instance.get<Crewresult>(`movie/${id}/credits?${api_string}&language=en-US`)).data.cast; }\n}\n\nexport default MovieAPI;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MovieSearchResult } from '../../models/MovieModels';\nimport './PopularItem.scss';\n\ninterface Props {\n    movie: MovieSearchResult\n}\nconst PopularItem = ({movie} : Props) => {\n    return (\n        <Link className={'movie'} to={`movies/${movie.id}`}>\n            {\n                movie.poster_path == null ? \n                <div className=\"no-poster\">\n                    <h3>{\n                        movie.title.length > 30 ?\n                            movie.title.substring(0, 30)+\"...\"\n                            : movie.title    \n                    }</h3>\n                </div>\n                :\n                <div className=\"poster\" style={\n                    {\n                        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie.poster_path})`\n                    }\n                }></div>\n            }\n           \n        </Link>\n    );\n}\n\nexport default PopularItem;","import { CircularProgress, Slider, TextField } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { MovieSearchResult } from '../../models/MovieModels';\nimport MovieAPI from '../../utils/MovieAPI';\nimport PopularItem from '../PopularItem/PopularItem';\n\nimport './PopularList.scss';\n\nconst PopularList = () => {\n\n    const [ratings, setRatings] = useState<number[]>([0, 10]);\n    const [searching, setSearching] = useState(true);\n\n    const [movies, setMovies] = useState<MovieSearchResult[]>([]);\n    const [visibleMovies, setVisibleMovies] = useState<MovieSearchResult[]>([]);\n    const [popularMovies, setPopularMovies] = useState<MovieSearchResult[]>([]);\n\n    useEffect(() => {\n        MovieAPI.getPopularMovies().then(response => {\n        setMovies(response);\n          setVisibleMovies(response);\n          setPopularMovies(response);\n          setSearching(false);\n        }).catch(error => {\n            console.log(error);\n        })\n      }, [])\n\n\n    const searchTermChange = async (searchTerm: string) => {\n        if (searchTerm === \"\") {\n            setMovies(popularMovies);\n        } else {\n            await setSearching(true);\n            await setMovies(await MovieAPI.searchMovies(searchTerm));\n            await filterMovies(ratings);\n            await setSearching(false);\n        }\n    }\n    const ratingRangeChange = async (event: Event, newValue: number | number[]) => {\n        const useVal = newValue as number[];\n        setRatings(useVal);\n        filterMovies(useVal);\n    }\n\n    const filterMovies = async (r: number[]) => {\n        await setVisibleMovies(movies.filter(m => m.vote_average >= r[0] && m.vote_average <= r[1]));\n    }\n\n    return (\n        <div className='popular'>\n            {\n                popularMovies.length !== 0 ? \n                    <div className=\"header\" style={{backgroundImage: `url(https://image.tmdb.org/t/p/original/${popularMovies[0].backdrop_path})`}}>\n                        <h1>MicroAA MovieDB</h1>\n                    </div> : \n                    <div>\n\n                    </div>\n            }\n        \n            <div className=\"form\">\n                <h1>Popular Movies</h1>\n                <TextField \n                    id=\"outlined-basic\" \n                    label=\"Search Movies By Name\" \n                    variant=\"outlined\" \n                    onChange={e => searchTermChange(e.target.value)}\n                />\n                <div>\n                    <h3>MovieDB Ratings</h3>\n                    <Slider\n                        value={ratings}\n                        onChange={ratingRangeChange}\n                        valueLabelDisplay=\"auto\"\n                        min={0}\n                        max={10}\n                    />\n                </div>\n                \n            </div>\n            {\n                searching ?\n                    <CircularProgress />\n                    :\n                    <div className=\"movies\">\n                        {visibleMovies.map(movie => {\n                            return <PopularItem key={movie.id} movie={movie}/>\n                        })}\n                    </div>\n            }\n        </div>\n    );\n}\nexport default PopularList;\n","import { CircularProgress } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Crewmember, MovieDetails, Video } from '../../models/MovieModels';\nimport MovieAPI from '../../utils/MovieAPI';\n\nimport './MovieDetailsPage.scss';\n\nconst MovieDetailsPage = () => {\n\n    const { id } = useParams();\n\n    const [loading, setLoading] = useState(true);\n    const [movie, setMovie] = useState<MovieDetails>();\n    const [videos, setVideos] = useState<Video[]>([]);\n    const [crew, setCrew] = useState<Crewmember[]>([]);\n\n    useEffect(() => {\n        const useId = id as string;\n        Promise.all([\n            MovieAPI.getMovieDetails(useId),\n            MovieAPI.getMovieVideos(useId),\n            MovieAPI.getCrew(useId)\n        ]).then(response => {\n            Promise.all([\n                setMovie(response[0]),\n                setVideos(response[1]),\n                setCrew(response[2])\n            ]).then(r => {\n                setLoading(false);\n            })\n        })\n    }, [id]);\n    return <div className=\"movie-details-page\">\n        {\n            loading ? <CircularProgress />\n            : <div>\n                <div className=\"cover\"\n                style={{backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie!.backdrop_path})`}}\n                >\n                    <h1>{movie!.title}</h1>\n                </div>\n                <div className=\"info\">\n                    <div>\n                        <h2>Genrer:</h2>\n                        {movie!.genres.map(x => <div key={x.id}>{x.name}</div>)}\n                    </div> \n                    <div>\n                        <h2>Beskrivning:</h2>\n                        <div>{movie!.overview}</div>\n                    </div> \n                    <div>\n                        <h2>Skådespelare</h2>\n                        <div className=\"actors\">\n                            {crew.map(member => {\n                                return (<div key={member.id} className=\"actor\">\n                                    <div \n                                        className=\"image\" \n                                        style={{backgroundImage: `url(https://image.tmdb.org/t/p/original/${member.profile_path})`}}/>\n                                    <h3>{member.name}</h3>\n                                </div>)\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"trailer\">\n                        {\n                            videos.length > 0 ? \n                                <iframe\n                                    width=\"100%\"\n                                    height=\"600px\"\n                                    src={`https://www.youtube.com/embed/${videos[0].key}`}\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen\n                                    title=\"Embedded youtube\"\n                                />\n                            : <div>Ingen trailer</div>\n                        }\n                    </div>\n                </div>\n            </div>\n        }\n    </div>\n}\nexport default MovieDetailsPage;","import { Route, Routes } from 'react-router';\nimport PopularList from './components/PopularList/PopularList';\nimport MovieDetailsPage from './components/MovieDetailsPage/MovieDetailsPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n          <Route path='/' element={\n              <PopularList />\n          }/>\n          <Route path=\"/movies/:id\" element={\n            <MovieDetailsPage/>\n          }/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}